buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.5.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    signingConfigs {
        release {
            keyAlias project.hasProperty('KEY_ALIAS') ? KEY_ALIAS : ""
            keyPassword project.hasProperty('KEY_PASSWORD') ? KEY_PASSWORD : ""
            storePassword project.hasProperty('STORE_PASSWORD') ? KEY_STORE_PASSWORD : ""
            storeFile project.hasProperty('KEY_FILE') ? file(KEY_FILE) : ""
        }
        debug {
            storeFile rootProject.file('debug_key.jks')
            keyAlias 'debug_key'
            keyPassword 'debugging'
            storePassword 'debugging'
        }

    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.tpb.projects"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode gitInfo().commitCount
        versionName "1.1.0"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes.all {
        it.buildConfigField('String', 'REPO_ADDRESS', project.hasProperty('REPO_ADDRESS') ? REPO_ADDRESS : System.getenv('REPO_ADDRESS'))
        it.buildConfigField('String', 'GITHUB_CLIENT_ID', project.hasProperty('GITHUB_CLIENT_ID') ? GITHUB_CLIENT_ID : System.getenv('GITHUB_CLIENT_ID'))
        it.buildConfigField('String', 'GITHUB_CLIENT_SECRET', project.hasProperty('GITHUB_CLIENT_SECRET') ? GITHUB_CLIENT_SECRET : System.getenv('GITHUB_CLIENT_SECRET'))
        it.buildConfigField('String', 'GITHUB_REDIRECT_URL', project.hasProperty('GITHUB_REDIRECT_URL') ? GITHUB_REDIRECT_URL : System.getenv('GITHUB_REDIRECT_URL'))
        it.buildConfigField('String', 'FEATURE_REQUEST_EMAIL', project.hasProperty('FEATURE_REQUEST_EMAIL') ? FEATURE_REQUEST_EMAIL : System.getenv('FEATURE_REQUEST_EMAIL'))
        it.buildConfigField('String', 'BUG_EMAIL', project.hasProperty('BUG_EMAIL') ? BUG_EMAIL : System.getenv('BUG_EMAIL'))
        it.buildConfigField('String', 'IMGUR_CLIENT_ID', project.hasProperty('IMGUR_CLIENT_ID') ? IMGUR_CLIENT_ID : System.getenv('IMGUR_CLIENT_ID'))
        it.buildConfigField('String', 'IMGUR_CLIENT_SECRET', project.hasProperty('IMGUR_CLIENT_SECRET') ? IMGUR_CLIENT_SECRET : System.getenv('IMGUR_CLIENT_SECRET'))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    compileOptions {
        incremental true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://s3.amazonaws.com/repo.commonsware.com"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compile files('src/main/lib/cwac-pager-0.2.5.jar')
    compile project(':animatingrecycler')
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:support-compat:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.amitshekhar.android:android-networking:0.4.0'
    compile 'com.mittsu:markedview:1.0.4@aar'
    compile 'com.getbase:floatingactionbutton:1.10.1'
    compile 'com.jakewharton:butterknife:8.5.1'
    compile 'com.google.firebase:firebase-core:10.2.0'
    compile 'com.google.firebase:firebase-crash:10.2.0'
    compile 'com.atlassian.commonmark:commonmark:0.8.0'
    compile 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.8.0'
    compile 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.8.0'
    compile project(':HtmlTextView')
    compile project(':contributionsview')
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
}

def gitInfo() {
    def commitCount = 0
    def revision = "(unknown revision)"
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--all', '--count'
            standardOutput stdout
        }
        commitCount = stdout.toString().trim().toInteger()
        stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '-n', '1'
            standardOutput stdout
        }
        revision = stdout.toString().trim()
    }
    catch (error) {
        println "Error: ${error}"
    }
    return [commitCount: commitCount, revision: revision]
}
println(gitInfo())

println(System.getenv("TRAVIS"))
if(System.getenv("TRAVIS") != "true") {
    apply plugin: 'com.google.gms.google-services'
}